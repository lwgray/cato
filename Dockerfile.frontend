# Cato Frontend Dockerfile
# React + TypeScript + Vite frontend with multi-stage build

# Stage 1: Build the frontend
FROM node:18-alpine AS builder

LABEL maintainer="Marcus Team <team@marcus.ai>"
LABEL description="Cato Frontend - Marcus Visualization Dashboard UI (Builder)"

WORKDIR /app

# Copy package files
COPY dashboard/package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY dashboard/ ./

# Build argument for backend URL (can be overridden at build time)
ARG VITE_API_URL=http://localhost:4301
ARG VITE_DATA_MODE=live

# Create .env file for build
RUN echo "VITE_API_URL=${VITE_API_URL}" > .env && \
    echo "VITE_DATA_MODE=${VITE_DATA_MODE}" >> .env

# Build the application
RUN npm run build

# Stage 2: Serve with nginx
FROM nginx:alpine

LABEL maintainer="Marcus Team <team@marcus.ai>"
LABEL description="Cato Frontend - Marcus Visualization Dashboard UI"

# Copy built files from builder
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 5173;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript application/json;

    # SPA routing - serve index.html for all routes
    location / {
        try_files \$uri \$uri/ /index.html;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
}
EOF

# Expose port
EXPOSE 5173

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --quiet --tries=1 --spider http://localhost:5173/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
